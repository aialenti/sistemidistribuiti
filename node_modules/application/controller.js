/* 
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

var model = require('./model.js');
var crypto = require('./libs/md5.js');

//callback da eseguire dopo la query
callback = function(rows){
  console.log(rows);
}

//esecuzione della query
//model.executeQuery(query,callback);

var getIndex = function(req,res){
  
  console.log("dkjbsakdsa")
  //res.render('index', { title: 'Express' });
  var body = 'Hello World';
  res.setHeader('Content-Type', 'text/plain');
  res.setHeader('Content-Length', body.length);
  res.end(body);
  
}

var doLogin = function(req, res) {
  model.getParam(req,"id");
  var data1 = new Object;
  data1.table = "tabella";
  data1.select = ["abcd", "123"];
  data1.where = [
  ["abcd.x", "=", "343"]]
  ;
  var data = new Object;
  data.table = "tabella";
  data.valueSet = [
  ["abcd", "123"],
  ["defg", "345"]
  ]
  data.where = [
  ["abcd.x", "=", "343"],
  ["zdfse", "IN", model.searchQuery(data1)]
  ];
  console.log(model.updateQuery(data));
  res.render('index', {
    pageTitle: 'ciao', 
    youAreUsingJade: 'true'
  });  
}

var manageMatch = function(req, res) {
  model.req = req; //in questo modo non devo inserire req in tutte le chiamate a getParam;
  var query;
  var action = model.getParam("action");
  var currentDay = model.getParam("day");
  var home_team = model.getParam('home_team');
  var away_team = model.getParam('away_team');
  var matchdays_flag = model.getParam('matchdays_flag');
  var matchdays_number = model.getParam('matchdays_number');
  var matchdays_season = model.getParam('matchdays_season');
  var id = model.getParam('id');
  
  var data = new Object();
  data.table = "matches";
  
  console.log(action)
  switch(action){
    case "create":
      data.values = [
      ["home_team",home_team],
      ["away_team",away_team],
      ["matchdays_flag",matchdays_flag],
      ["matchdays_number",matchdays_number],
      ["matchdays_season",matchdays_season]
      ]
      query = model.insertQuery(data);
      break;
    case "delete":
      data.where = [
      ["id","=",id]
      ];
      query = model.deleteQuery(data);
      break;
    case "edit":
      data.values = [
      ["home_team",home_team],
      ["away_team",away_team],
      ["matchdays_flag",matchdays_flag],
      ["matchdays_number",matchdays_number],
      ["matchdays_season",matchdays_season]
      ]
      data.where = [
      ["id","=",id]
      ];
      query = model.updateQuery(data);
      break;
    default:
      break;
  }
  model.executeQuery(query,function(error, rows, cols){
    console.log("ok")
  });

}

var manageScore = function(req, res) {
  model.req = req; //in questo modo non devo inserire req in tutte le chiamate a getParam;
  var query;
  var action = model.getParam("action");
  var flag = model.getParam('flag');
  var time = model.getParam('time');
  var player = model.getParam('player');
  var match_id = model.getParam('match_id');
  var id = model.getParam('id');
  
  var data = new Object();
  data.table = "scores";
  
  console.log(action)
  switch(action){
    case "create":
      data.values = [
      ["flag",flag],
      ["time",time],
      ["player",player],
      ["match_id",match_id]
      ]
      query = model.insertQuery(data);
      break;
    case "delete":
      data.where = [
      ["id","=",id]
      ];
      query = model.deleteQuery(data);
      break;
    case "edit":
      data.values = [
      ["flag",flag],
      ["time",time],
      ["player",player],
      ["match_id",match_id]
      ]
      data.where = [
      ["id","=",id]
      ];
      query = model.updateQuery(data);
      break;
    default:
      break;
  }
  model.executeQuery(query,function(error, rows, cols){
    console.log("ok")
  });

}

var manageMatchDay = function(req, res) {
  model.req = req; //in questo modo non devo inserire req in tutte le chiamate a getParam;
  var query;
  var action = model.getParam("action");
  var flag = model.getParam('flag');
  var number = model.getParam('number');
  var season = model.getParam('season');
  
  var data = new Object();
  data.table = "matchdays";
  
  console.log(action)
  switch(action){
    case "create":
      data.values = [
      ["flag",flag],
      ["number",number],
      ["season",season]
      ]
      query = model.insertQuery(data);
      break;
    case "delete":
      data.where = [
      ["number","=",number],
      ["season","=",season],
      ["flag","=",flag]
      ];
      query = model.deleteQuery(data);
      break;
    case "edit":
      data.values = [
      ["number","=",number],
      ["season","=",season],
      ["flag","=",flag]
      ];
      data.where = [
      ["number","=",number],
      ["season","=",season],
      ["flag","=",flag]
      ];
      query = model.updateQuery(data);
      break;
    default:
      break;
  }
  model.executeQuery(query,function(error, rows, cols){
    console.log("ok")
  });

}

var manageTeam = function(req, res) {
  model.req = req; //in questo modo non devo inserire req in tutte le chiamate a getParam;
  var query;
  var action = model.getParam("action");
  var id = model.getParam('id');
  var number = model.getParam('name');
  
  var data = new Object();
  data.table = "teams";
  
  console.log(action)
  switch(action){
    case "create":
      data.values = [
      ["name",name]
      ]
      query = model.insertQuery(data);
      break;
    case "delete":
      data.where = [
      ["id","=",id]
      ];
      query = model.deleteQuery(data);
      break;
    case "edit":
      data.values = [
      ["name","=",name]
      ];
      data.where = [
      ["id","=",id]
      ];
      query = model.updateQuery(data);
      break;
    default:
      break;
  }
  model.executeQuery(query,function(error, rows, cols){
    console.log("ok")
  });

}


exports.getIndex = getIndex;
exports.doLogin = doLogin;
exports.manageMatch = manageMatch;
exports.manageScore = manageScore;
exports.manageTeam = manageTeam;
