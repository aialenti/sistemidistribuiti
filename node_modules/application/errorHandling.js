/* 
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

// L'invio sul client dovrà essere realizzato tramite long polling e socketio
var handleQueryError = function(e){
  var message = e.message;
  var code = e.code;
  console.log(message);
  switch(code){
    case "ER_NO_REFERENCED_ROW_":
      if(message.match(/FOREIGN KEY \(\`home\_team\`\)/))
        console.log("Squadra in casa non esistente");
      if(message.match(/FOREIGN KEY \(\`away\_team\`\)/))
        console.log("Squadra fuori casa non esistente");
      if(message.match(/FOREIGN KEY \(\`matchdays\_flag\`\, \`matchdays\_number\`\, \`matchdays\_season\`\)/)) //giornata non esistente
        console.log("Giornata non esistente");
      if(message.match(/ FOREIGN KEY \(\`match\_id\`\)/))
        console.log("Match non esistente");
      break;
    case "ER_DUP_ENTRY":
      console.log("Entry duplicata");
      break;
    case "ECONNREFUSED":
      console.log("Errore del server SQL (impossibile connettersi)");
      break;
    case "ER_NO_SUCH_TABLE":
      console.log("Si sta' tentando di modificare una tabella inesistente (Errore database)");
      break;
    case "no_affected_rows":
      console.log("Il database non è stato modificato a causa di un errore")
    default:
      break;
  }
}

var onlyNumbersTwoDigits = function(data,needed){
  var ret = new Object;
  data = data.toString();
  if(data.match(/^[0-9]{0,2}$/)){
    ret.status = false;
    ret.message = "ok";
  }
  else {
    ret.message = "no_two_digits";
    ret.status = true;
  }
  if(needed == true && (data == "" || data == null || data == undefined)){
    ret.status = true;
    ret.message = "four_digits_number_needed"
  }
  return ret;
}

var onlyNumbersFourDigits = function(data,needed){
  var ret = new Object;
  data = data.toString();
  if(data.match(/^[0-9]{0,4}$/)){
    ret.status = false;
    ret.message = "ok";
  }
  else {
    ret.message = "no_four_digits";
    ret.status = true;
  }
  if(needed == true && (data == "" || data == null || data == undefined)){
    ret.status = true;
    ret.message = "four_digits_number_needed"
  }
  return ret;
}

var emptyList = function(list,minimum){
  minimum = minimum || 1;
  var ret = new Object;
  ret.status = false;
  ret.message ="ok";
    if(list.length < minimum){
      ret.status = true;
      ret.message = "empty_list";
    }
return ret;
    
}

exports.emptyList = emptyList;
exports.handleQueryError = handleQueryError;
exports.onlyNumbersTwoDigits = onlyNumbersTwoDigits;
exports.onlyNumbersFourDigits = onlyNumbersFourDigits;